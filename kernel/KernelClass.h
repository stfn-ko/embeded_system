////////////////////////////////////////////////////////////////////////////////
/// KERNELCLASS.H
///
/// Kernel class
///
/// Dr J A Gow 2022
///
////////////////////////////////////////////////////////////////////////////////

#ifndef KERNELCLASS_H_
#define KERNELCLASS_H_

#include "taskring.h"
#include "mq.h"
#include "iic.h"

namespace Kernel {

	class KernelClass {

		private:

		public:

			/// Accessible members

			TaskRing&	TaskManager=TaskRing::Get();
			MQClass&	MessageQueue=MQClass::Get();
            IIC&        IICDriver=IIC::Get();

			////////////////////////////////////////////////////////////////////////////////
			/// KernelClass
			///
			/// CONSTRUCTOR, PRIVATE
			///
			/// Initializes kernel object (statically). This class should be a singleton.
			///
			///////////////////////////////////////////////////////////////////////////////

			KernelClass();

			///////////////////////////////////////////////////////////////////////////////
			/// ~KernelClass
			///
			/// DESTRUCTOR
			///
			/// In an embedded environment, this is usually never called. However we include
			/// for completeness.
			///
			///////////////////////////////////////////////////////////////////////////////

			~KernelClass();
	};

}
#endif
